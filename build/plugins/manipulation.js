/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "/build/plugins/";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./source/js/plugins/manipulation.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./source/js/gesture-events.js":
/*!*************************************!*\
  !*** ./source/js/gesture-events.js ***!
  \*************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n    onDoubleClick,\n    onPinch,\n    onDoubleTap\n});\n\nconst DOUBLE_CLICK_TIMEOUT = 500;\nconst DOUBLE_TAP_DISTANCE_THRESHOLD = 50;\nconst DOUBLE_TAP_TIMEOUT = 250;\n\nfunction onDoubleClick(elem, callback)\n{\n    elem.addEventListener('dblclick', function (event)\n    {\n        if (!event.ctrlKey)\n        {\n            callback(event, getRelativeOffset(event.currentTarget, event));\n        }\n    });\n\n    // Handle the control key for macs (in conjunction with double-clicking)\n    // FIXME: Does a click get handled with ctrl pressed on non-Macs?\n    const tracker = createDoubleEventTracker(DOUBLE_CLICK_TIMEOUT);\n\n    elem.addEventListener('contextmenu', function (event)\n    {\n        event.preventDefault();\n\n        if (event.ctrlKey)\n        {\n            if (tracker.isTriggered())\n            {\n                tracker.reset();\n                callback(event, getRelativeOffset(event.currentTarget, event));\n            }\n            else\n            {\n                tracker.trigger();\n            }\n        }\n    });\n}\n\nfunction onPinch(elem, callback)\n{\n    let startDistance = 0;\n\n    elem.addEventListener('touchstart', function (event)\n    {\n        // Prevent mouse event from firing\n        event.preventDefault();\n\n        if (event.originalEvent.touches.length === 2)\n        {\n            startDistance = distance(\n                event.originalEvent.touches[0].clientX,\n                event.originalEvent.touches[0].clientY,\n                event.originalEvent.touches[1].clientX,\n                event.originalEvent.touches[1].clientY\n            );\n        }\n    });\n\n    elem.addEventListener('touchmove', function(event)\n    {\n        // Prevent mouse event from firing\n        event.preventDefault();\n\n        if (event.originalEvent.touches.length === 2)\n        {\n            const touches = event.originalEvent.touches;\n\n            const moveDistance = distance(\n                touches[0].clientX,\n                touches[0].clientY,\n                touches[1].clientX,\n                touches[1].clientY\n            );\n\n            const zoomDelta = moveDistance - startDistance;\n\n            if (Math.abs(zoomDelta) > 0)\n            {\n                const touchCenter = {\n                    pageX: (touches[0].clientX + touches[1].clientX) / 2,\n                    pageY: (touches[0].clientY + touches[1].clientY) / 2\n                };\n\n                callback(event, getRelativeOffset(event.currentTarget, touchCenter), startDistance, moveDistance);\n            }\n        }\n    });\n}\n\nfunction onDoubleTap(elem, callback)\n{\n    const tracker = createDoubleEventTracker(DOUBLE_TAP_TIMEOUT);\n    let firstTap = null;\n\n    elem.addEventListener('touchend', (event) =>\n    {\n        // Prevent mouse event from firing\n        event.preventDefault();\n\n        if (tracker.isTriggered())\n        {\n            tracker.reset();\n\n            // Doubletap has occurred\n            const secondTap = {\n                pageX: event.originalEvent.changedTouches[0].clientX,\n                pageY: event.originalEvent.changedTouches[0].clientY\n            };\n\n            // If first tap is close to second tap (prevents interference with scale event)\n            const tapDistance = distance(firstTap.pageX, firstTap.pageY, secondTap.pageX, secondTap.pageY);\n\n            // TODO: Could give something higher-level than secondTap to callback\n            if (tapDistance < DOUBLE_TAP_DISTANCE_THRESHOLD)\n                callback(event, getRelativeOffset(event.currentTarget, secondTap));\n\n            firstTap = null;\n        }\n        else\n        {\n            firstTap = {\n                pageX: event.originalEvent.changedTouches[0].clientX,\n                pageY: event.originalEvent.changedTouches[0].clientY\n            };\n\n            tracker.trigger();\n        }\n    });\n}\n\n// Pythagorean theorem to get the distance between two points (used for\n// calculating finger distance for double-tap and pinch-zoom)\nfunction distance(x1, y1, x2, y2)\n{\n    return Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n}\n\n// Utility to keep track of whether an event has been triggered twice\n// during a a given duration\nfunction createDoubleEventTracker(timeoutDuration)\n{\n    let triggered = false;\n    let timeoutId = null;\n\n    return {\n        trigger()\n        {\n            triggered = true;\n            resetTimeout();\n            timeoutId = setTimeout(function ()\n            {\n                triggered = false;\n                timeoutId = null;\n            }, timeoutDuration);\n        },\n        isTriggered()\n        {\n            return triggered;\n        },\n        reset()\n        {\n            triggered = false;\n            resetTimeout();\n        }\n    };\n\n    function resetTimeout()\n    {\n        if (timeoutId !== null)\n        {\n            clearTimeout(timeoutId);\n            timeoutId = null;\n        }\n    }\n}\n\nfunction getRelativeOffset(elem, pageCoords)\n{\n    const bounds = elem.getBoundingClientRect();\n\n    return {\n        left: pageCoords.pageX - bounds.left,\n        top: pageCoords.pageY - bounds.top\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./source/js/gesture-events.js\n");

/***/ }),

/***/ "./source/js/plugins/_filters.js":
/*!***************************************!*\
  !*** ./source/js/plugins/_filters.js ***!
  \***************************************/
/*! exports provided: resetFilters, addFilterToQueue, grayscale, saturation, vibrance, brightness, contrast, invert, threshold, hue, gamma, ccRed, ccGreen, ccBlue, rgbToHSV, hsvToRGB, sharpen */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"resetFilters\", function() { return resetFilters; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"addFilterToQueue\", function() { return addFilterToQueue; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"grayscale\", function() { return grayscale; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"saturation\", function() { return saturation; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"vibrance\", function() { return vibrance; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"brightness\", function() { return brightness; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"contrast\", function() { return contrast; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"invert\", function() { return invert; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"threshold\", function() { return threshold; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hue\", function() { return hue; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"gamma\", function() { return gamma; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ccRed\", function() { return ccRed; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ccGreen\", function() { return ccGreen; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"ccBlue\", function() { return ccBlue; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"rgbToHSV\", function() { return rgbToHSV; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"hsvToRGB\", function() { return hsvToRGB; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"sharpen\", function() { return sharpen; });\n\n// stores an array of objects, each object stores the function, image data, adjust to apply, and name\nlet _filterQueue = [];\n// stores whether the invert filter was used (for if it should be reapplied)\nlet inverted = false;\n\nfunction resetFilters ()\n{\n    _filterQueue = [];\n    inverted = false;\n}\n\n// Add a filter to the array. If it is new, apply the filter's function to the image data of\n// the previous filter's returned image data (or the default image data if it's the first filter),\n// and return this new image data. Pass string 'name' since function.name with minifiedJS = bad\n// Threshold is exclusive to other filters and vice versa\nfunction addFilterToQueue (data, filter, adjust, name)\n{\n    // index of the filter in the queue, -1 if not found\n    let index = _filterQueue.findIndex(f => f.filter.name === filter.name);\n    if (index !== -1) // adjust a filter already in the queue\n    {\n        let filtObj = _filterQueue[index];\n        filtObj.adjust = adjust;\n        \n        // all filters except sharpness use _apply (from within their private function 'filter')\n        // whereas sharpness uses convolve, so need to check (ie. can't generalize for all filters)\n        if (filtObj.name === 'Sharpness')\n        {\n            // if adjust[1] is 0, then sharpness should be reset (cancelled)\n            if (filtObj.adjust[1] === 0)\n                filtObj.postData = filtObj.prevData;\n            else\n                filtObj.postData = convolve(filtObj.prevData, filtObj.adjust);\n        }\n        else if (filtObj.name === 'Invert')\n        {\n            // invert filter should toggle, so use post-alteration image data\n            filtObj.postData = _apply(filtObj.postData, filtObj.filter, filtObj.adjust);\n            inverted = !inverted;\n        }\n        else \n            filtObj.postData = _apply(filtObj.prevData, filtObj.filter, filtObj.adjust);\n\n        // reapply all filters that come after in the queue\n        for (let i = index + 1, len = _filterQueue.length; i < len; i++)\n        {\n            let otherFiltObj = _filterQueue[i];\n\n            if (otherFiltObj.name === 'Invert' && !inverted) // don't reinvert the image\n                continue;\n\n            otherFiltObj.prevData = _filterQueue[i - 1].postData; // starts at filt\n\n            if (otherFiltObj.name === 'Sharpness')\n                if (otherFiltObj.adjust[1] === 0)\n                    otherFiltObj.postData = otherFiltObj.prevData;\n                else\n                    otherFiltObj.postData = convolve(otherFiltObj.prevData, otherFiltObj.adjust);\n            else \n                otherFiltObj.postData = _apply(otherFiltObj.prevData, otherFiltObj.filter, otherFiltObj.adjust);\n\n            if (i === len - 1) // last filter\n                return otherFiltObj.postData;\n        }\n\n        // only two filters in queue and second was modified\n        return filtObj.postData; \n    }\n    else // add new filter to the queue\n    {\n        // handle threshold uniqueness\n        if (name === 'Threshold' || (_filterQueue[0] && _filterQueue[0].name === 'Threshold'))\n        {\n            // reset filter queue\n            resetFilters();\n\n            // reset appropriate sliders\n            let tools = document.getElementsByClassName('manipulation-tools')[0];\n            for (let i = 0, len = tools.children.length; i < len; i++)\n            {\n                let tool = tools.children[i].children[0];\n\n                if (tool && tool.type === 'range')\n                {\n                    let isThreshold = tool.parentElement.textContent.includes('Threshold');\n                    let isZoom = tool.parentElement.textContent.includes('Zoom');\n                    let isRotate = tool.parentElement.textContent.includes('Rotation');\n\n                    if (name === 'Threshold' && !isThreshold && !isZoom && !isRotate) // reset all except\n                        tool.value = 0;\n                    else if (name !== 'Threshold' && isThreshold) // reset only threshold\n                        tool.value = 0;\n                }\n            }\n\n            // reset log\n            document.getElementById('filter-log').innerHTML = \"<h3> Filter Application Order <h3>\";\n        }\n\n        _filterQueue.push({\n            filter: filter,\n            prevData: _filterQueue.length === 0 ? data : _filterQueue[_filterQueue.length - 1].postData,\n            adjust: adjust,\n            name: name\n        });\n\n        let filtObj = _filterQueue[_filterQueue.length - 1];\n\n        if (filtObj.name === 'Sharpness')\n            filtObj.postData = convolve(filtObj.prevData, filtObj.adjust);\n        else \n            filtObj.postData = _apply(filtObj.prevData, filtObj.filter, filtObj.adjust);\n\n        // invert filter was added to queue\n        if (filtObj.name === 'Invert')\n            inverted = true;\n\n        // add name to applied filters log\n        let p = document.createElement('p');\n        p.setAttribute('style', 'color: white; margin: 0;');\n        p.innerText = filtObj.name;\n        document.getElementById('filter-log').appendChild(p);\n\n        return filtObj.postData;\n    }\n}\n\n/**\n * Pre-paints the adjustment to an offscreen canvas before moving it to the on-screen canvas.\n **/\nfunction _getOffscreenCanvasData (w, h)\n{\n    let tmpCanvas = document.createElement('canvas');\n    let tmpCtx = tmpCanvas.getContext('2d');\n\n    return tmpCtx.createImageData(w, h);\n}\n\nfunction _manipulateImage (data, func, adjustment)\n{\n    let len = data.length;\n\n    for (let i = 0; i < len; i += 4)\n    {\n        let r = data[i];\n        let g = data[i + 1];\n        let b = data[i + 2];\n\n        let newPixelValue = func(r, g, b, adjustment);\n\n        data[i] = newPixelValue[0];\n        data[i + 1] = newPixelValue[1];\n        data[i + 2] = newPixelValue[2];\n        data[i + 3] = newPixelValue[3];\n    }\n\n    return data;\n}\n\nfunction _apply (data, pixelFunc, adjust)\n{\n    let dataArr = new Uint8ClampedArray(data.data);\n    let inverted = _manipulateImage(dataArr, pixelFunc, adjust);\n\n    let newCanvasData = _getOffscreenCanvasData(data.width, data.height);\n    newCanvasData.data.set(inverted);\n\n    return newCanvasData;\n}\n\n/**\n * Inverts the colours of a canvas.\n *\n * @params {object} data - A canvas image data object.\n * @returns {object} A new canvas data object.\n **/\nfunction grayscale(data)\n{\n    return addFilterToQueue(data, _grayscale, null, 'Grayscale');\n}\n\n/**\n * See: https://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n *\n * Reference: http://www.phpied.com/image-fun/ and https://github.com/meltingice/CamanJS/blob/master/src/lib/filters.coffee#L89\n *\n * @params {integer} r - the value of the red pixel\n * @params {integer} g - the value of the green pixel\n * @params {integer} b - the value of the blue pixel\n * @returns {Array} - The computed RGB values for the input, with a constant 255 for the alpha channel.\n **/\nfunction _grayscale (r, g, b)\n{\n    let pixelAverage = (0.3 * r + 0.59 * g + 0.11 * b);\n\n    return [pixelAverage, pixelAverage, pixelAverage, 255];\n}\n\nfunction saturation (data, adjust)\n{\n    return addFilterToQueue(data, _saturation, adjust, 'Saturation');\n}\n\n/**\n * Adjusts the color saturation of the image.\n * Range is -100 to 100. Values < 0 will desaturate the image while values > 0 will saturate it.\n *\n * See https://github.com/meltingice/CamanJS/blob/master/src/lib/filters.coffee#L42-L58\n *\n * @params {integer} r - the value of the red pixel\n * @params {integer} g - the value of the green pixel\n * @params {integer} b - the value of the blue pixel\n * @params {integer} adjust - the saturation value for adjustment, -100 to 100\n * @returns {Array} - The computed RGB values for the input, with a constant 255 for the alpha channel.\n **/\nfunction _saturation (r, g, b, adjust)\n{\n    let adj = adjust * -0.01;\n    let max = Math.max(r, g, b);\n\n    return [\n        r !== max ? r + (max - r) * adj : r,\n        g !== max ? g + (max - g) * adj : g,\n        b !== max ? b + (max - b) * adj : b,\n        255\n    ];\n}\n\nfunction vibrance (data, adjust)\n{\n    return addFilterToQueue(data, _vibrance, adjust, 'Vibrance');\n}\n\n/**\n * Similar to saturation, but adjusts the saturation levels in a slightly smarter, more subtle way.\n * Vibrance will attempt to boost colors that are less saturated more and boost already saturated\n * colors less, while saturation boosts all colors by the same level.\n *\n * See: https://github.com/meltingice/CamanJS/blob/master/src/lib/filters.coffee#L60\n *\n * @params {integer} r - the value of the red pixel\n * @params {integer} g - the value of the green pixel\n * @params {integer} b - the value of the blue pixel\n * @params {integer} adjust - the vibrance value for adjustment, -100 to 100\n * @returns {Array} - The computed RGB values for the input, with a constant 255 for the alpha channel.\n **/\nfunction _vibrance (r, g, b, adjust)\n{\n    let adj = adjust * -1;\n\n    let max = Math.max(r, g, b);\n    let avg = r + g + b / 3;\n    let amt = ((Math.abs(max - avg) * 2 / 255) * adj) / 100;\n\n    return [\n        r !== max ? r + (max - r) * amt : r,\n        g !== max ? g + (max - g) * amt : g,\n        b !== max ? b + (max - b) * amt : b,\n        255\n    ];\n}\n\nfunction brightness (data, adjust)\n{\n    return addFilterToQueue(data, _brightness, adjust, 'Brightness');\n}\n\nfunction _brightness (r, g, b, adjust)\n{\n    let adj = Math.floor(255 * (adjust / 100));\n\n    return [\n        r + adj,\n        g + adj,\n        b + adj,\n        255\n    ];\n}\n\nfunction contrast (data, adjust)\n{\n    return addFilterToQueue(data, _contrast, adjust, 'Contrast');\n}\n\n/**\n * Increases or decreases the color contrast of the image.\n *\n * @params {integer} r - the value of the red pixel\n * @params {integer} g - the value of the green pixel\n * @params {integer} b - the value of the blue pixel\n * @params {integer} adjust - the contrast value for adjustment, -100 to 100\n * @returns {Array} - The computed RGB values for the input, with a constant 255 for the alpha channel.\n **/\nfunction _contrast (r, g, b, adjust)\n{\n    let adj = Math.pow((adjust + 100) / 100, 2);\n    let rr = r, gg = g, bb = b;\n\n    rr /= 255;\n    rr -= 0.5;\n    rr *= adj;\n    rr += 0.5;\n    rr *= 255;\n\n    gg /= 255;\n    gg -= 0.5;\n    gg *= adj;\n    gg += 0.5;\n    gg *= 255;\n\n    bb /= 255;\n    bb -= 0.5;\n    bb *= adj;\n    bb += 0.5;\n    bb *= 255;\n\n    return [\n        rr, gg, bb, 255\n    ];\n}\n/**\n * Inverts the colours of a canvas.\n *\n * @params {object} data - A canvas image data object.\n * @returns {object} A new canvas data object.\n **/\nfunction invert(data)\n{\n    return addFilterToQueue(data, _invert, null, 'Invert');\n}\n\n/**\n * Inverts the colours of the image.\n * See: https://github.com/meltingice/CamanJS/blob/master/src/lib/filters.coffee#L183\n *\n * @params {integer} r - the value of the red pixel\n * @params {integer} g - the value of the green pixel\n * @params {integer} b - the value of the blue pixel\n * @returns {Array} - The computed RGB values for the input, with a constant 255 for the alpha channel.\n **/\nfunction _invert (r, g, b)\n{\n    return [\n        255 - r,\n        255 - g,\n        255 - b,\n        255\n    ];\n}\n\nfunction threshold(data, adjust)\n{\n    return addFilterToQueue(data, _threshold, adjust, 'Threshold');\n}\n\n/**\n * Black pixels above a certain value (0-255); otherwise white. Perceptively weighted.\n *\n * See: https://www.html5rocks.com/en/tutorials/canvas/imagefilters/\n *\n * @params {integer} r - the value of the red pixel\n * @params {integer} g - the value of the green pixel\n * @params {integer} b - the value of the blue pixel\n * @params {integer} adjust - the threshold value, 0-255\n * @returns {Array} - The computed RGB values for the input, with a constant 255 for the alpha channel.\n **/\nfunction _threshold (r, g, b, adjust)\n{\n    let v = (0.2126 * r + 0.7152 * g + 0.0722 * b >= adjust) ? 255 : 0;\n\n    return [\n        v, v, v, 255\n    ];\n\n}\n\nfunction hue (data, adjust)\n{\n    return addFilterToQueue(data, _hue, adjust, 'Hue');\n}\n\nfunction _hue (r, g, b, adjust)\n{\n    let {h, s, v} = rgbToHSV(r, g, b);\n\n    h = h * 100;\n    h += Math.abs(adjust);\n    h = h % 100;\n    h /= 100;\n\n    let res = hsvToRGB(h, s, v);\n\n    return [\n        res.r, res.g, res.b, 255\n    ];\n}\n\nfunction gamma (data, adjust)\n{\n    return addFilterToQueue(data, _gamma, adjust, 'Gamma');\n}\n\n/**\n * Adjusts the gamma of the image.\n * Range is 0 to 4. Values between 0 and 1 will lessen the contrast while values greater\n * than 1 will increase it. Starts at 1 default. The actual adjust slider is from -100 to\n * 300 (so default can be 0 and offset accordingly), so must scale properly\n * See https://github.com/meltingice/CamanJS/blob/master/src/lib/filters.coffee#L210-L221\n *\n * @params {integer} r - the value of the red pixel\n * @params {integer} g - the value of the green pixel\n * @params {integer} b - the value of the blue pixel\n * @params {integer} adjust - the gamma value for adjustment, 0 to 400\n * @returns {Array} - The computed RGB values for the input, with a constant 255 for the alpha channel.\n **/\nfunction _gamma (r, g, b, adjust)\n{\n    let adj = adjust / 100 + 1;\n    if (adj < 0)\n        adj *= -1;\n\n    return [\n        Math.pow(r / 255, adj) * 255,\n        Math.pow(g / 255, adj) * 255,\n        Math.pow(b / 255, adj) * 255,\n        255\n    ];\n}\n\nfunction ccRed (data, adjust)\n{\n    return addFilterToQueue(data, _ccRed, adjust, 'CC Red');\n}\n\n/** \n * Adjusts the red intensity of the image.\n *\n * See https://github.com/meltingice/CamanJS/blob/master/src/lib/filters.coffee#L274-L305\n *\n * @params {integer} r - the value of the red pixel\n * @params {integer} g - the value of the green pixel\n * @params {integer} b - the value of the blue pixel\n * @params {integer} adjust - the red value for adjustment, -100 to 100\n * @returns {Array} - The computed RGB values for the input, with a constant 255 for the alpha channel.\n */ \nfunction _ccRed (r, g, b, adjust)\n{\n    let adj = adjust / 100;\n\n    return [\n        adj > 0 ? r + (255 - r) * adj : r - r * Math.abs(adj),\n        g,\n        b,\n        255\n    ];\n}\n\nfunction ccGreen (data, adjust)\n{\n    return addFilterToQueue(data, _ccGreen, adjust, 'CC Green');\n}\n\n/** \n * Adjusts the green intensity of the image.\n *\n * See https://github.com/meltingice/CamanJS/blob/master/src/lib/filters.coffee#L274-L305\n *\n * @params {integer} r - the value of the red pixel\n * @params {integer} g - the value of the green pixel\n * @params {integer} b - the value of the blue pixel\n * @params {integer} adjust - the green value for adjustment, -100 to 100\n * @returns {Array} - The computed RGB values for the input, with a constant 255 for the alpha channel.\n */ \nfunction _ccGreen (r, g, b, adjust)\n{\n    let adj = adjust / 100;\n\n    return [\n        r,\n        adj > 0 ? g + (255 - g) * adj : g - g * Math.abs(adj),\n        b,\n        255\n    ];\n}\n\nfunction ccBlue (data, adjust)\n{\n    return addFilterToQueue(data, _ccBlue, adjust, 'CC Blue');\n}\n\n/** \n * Adjusts the blue intensity of the image.\n *\n * See https://github.com/meltingice/CamanJS/blob/master/src/lib/filters.coffee#L274-L305\n *\n * @params {integer} r - the value of the red pixel\n * @params {integer} g - the value of the green pixel\n * @params {integer} b - the value of the blue pixel\n * @params {integer} adjust - the blue value for adjustment, -100 to 100\n * @returns {Array} - The computed RGB values for the input, with a constant 255 for the alpha channel.\n */ \nfunction _ccBlue (r, g, b, adjust)\n{\n    let adj = adjust / 100;\n\n    return [\n        r,\n        g,\n        adj > 0 ? b + (255 - b) * adj : b - b * Math.abs(adj),\n        255\n    ];\n}\n\nfunction rgbToHSV (r, g, b)\n{\n    let rr = r, gg = g, bb = b;\n\n    rr /= 255;\n    gg /= 255;\n    bb /= 255;\n\n    let max = Math.max(rr, gg, bb);\n    let min = Math.min(rr, gg, bb);\n    let v = max;\n    let d = max - min;\n\n    let s = max === 0 ? 0 : d / max;\n    let h;\n\n    if (max === min)\n        h = 0;\n    else\n    {\n        switch (max)\n        {\n            case rr:\n                h = (gg - bb) / d + (gg < bb ? 6 : 0);\n                break;\n            case gg:\n                h = (bb - rr) / d + 2;\n                break;\n            case bb:\n                h = (rr - gg) / d + 4;\n                break;\n        }\n\n        h /= 6;\n    }\n\n    return {h, s, v};\n}\n\nfunction hsvToRGB (h, s, v)\n{\n    let b, f, g, i, p, q, r, t;\n    i = Math.floor(h * 6);\n    f = h * 6 - i;\n    p = v * (1 - s);\n    q = v * (1 - f * s);\n    t = v * (1 - (1 - f) * s);\n\n    switch (i % 6)\n    {\n        case 0:\n            r = v;\n            g = t;\n            b = p;\n            break;\n        case 1:\n            r = q;\n            g = v;\n            b = p;\n            break;\n        case 2:\n            r = p;\n            g = v;\n            b = t;\n            break;\n        case 3:\n            r = p;\n            g = q;\n            b = v;\n            break;\n        case 4:\n            r = t;\n            g = p;\n            b = v;\n            break;\n        case 5:\n            r = v;\n            g = p;\n            b = q;\n            break;\n    }\n\n    return {\n        r: Math.floor(r * 255),\n        g: Math.floor(g * 255),\n        b: Math.floor(b * 255)\n    };\n}\n\n\n/*********************************************\n    Convolution filters\n *********************************************/\n\nfunction convolve (data, weights, opaque)\n{\n    let side = Math.round(Math.sqrt(weights.length));\n    let halfSide = Math.floor(side / 2);\n\n    let srcData = data.data;\n    let sw = data.width;\n    let sh = data.height;\n    let w = sw;\n    let h = sh;\n\n    let output = _getOffscreenCanvasData(w, h);\n    let dst = output.data;\n\n    let alphaFac = opaque ? 1 : 0;\n\n    for (let y = 0; y < h; y++)\n    {\n        for (let x = 0; x < w; x++)\n        {\n            let sy = y;\n            let sx = x;\n            let dstOff = (y * w + x) * 4;\n\n            let r = 0, g = 0, b = 0, a = 0;\n\n            for (let cy = 0; cy < side; cy++)\n            {\n                for (let cx = 0; cx < side; cx++)\n                {\n                    let scy = sy + cy - halfSide;\n                    let scx = sx + cx - halfSide;\n\n                    if (scy >= 0 && scy < sh && scx >= 0 && scx < sw)\n                    {\n                        let srcOff = (scy * sw + scx) * 4;\n                        let wt = weights[cy * side + cx];\n                        r += srcData[srcOff] * wt;\n                        g += srcData[srcOff + 1] * wt;\n                        b += srcData[srcOff + 2] * wt;\n                        a += srcData[srcOff + 3] * wt;\n                    }\n                }\n            }\n\n            dst[dstOff] = r;\n            dst[dstOff + 1] = g;\n            dst[dstOff + 2] = b;\n            dst[dstOff + 3] = a + alphaFac * (255 - a);\n        }\n    }\n    return output;\n}\n\n\nfunction sharpen (data, adjust)\n{\n    let adj = adjust ? adjust : 100;\n    adj /= 100;\n\n    if (adjust === 0) // reset value\n        adj = 0;\n\n    let weights = [\n        0, -adj, 0,\n        -adj, 4 * adj + 1, -adj,\n        0, -adj, 0\n    ];\n\n    return addFilterToQueue(data, convolve, weights, 'Sharpness');\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./source/js/plugins/_filters.js\n");

/***/ }),

/***/ "./source/js/plugins/manipulation.js":
/*!*******************************************!*\
  !*** ./source/js/plugins/manipulation.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return ManipulationPlugin; });\n/* harmony import */ var _filters__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./_filters */ \"./source/js/plugins/_filters.js\");\n/* harmony import */ var _gesture_events__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../gesture-events */ \"./source/js/gesture-events.js\");\n\n\n\n/**\n * Returns a function, that, as long as it continues to be invoked, will not\n be triggered. The function will be called after it stops being called for\n N milliseconds. If `immediate` is passed, trigger the function on the\n leading edge, instead of the trailing.\n */\nfunction debounce (func, wait, immediate)\n{\n    let timeout;\n    return function ()\n    {\n        let context = this, args = arguments;\n        let later = function ()\n        {\n            timeout = null;\n            if (!immediate)\n            {\n                func.apply(context, args);\n            }\n        };\n        let callNow = immediate && !timeout;\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n        if (callNow)\n        {\n            func.apply(context, args);\n        }\n    };\n}\n\n/**\n * A Diva.js plugin that allows users to manipulate images by adjusting their\n * brightness, contrast, and other parameters.\n **/\nclass ManipulationPlugin\n{\n    constructor (core)\n    {\n        this._core = core;\n        this.pageToolsIcon = this.createIcon();\n        this._backdrop = null;\n        this._page = null;\n        this._mainImage = null;\n        this._canvas = null;\n\n        // store the data for the original main image so that we\n        // do the processing on that, not on a previously-processed image.\n        this._originalData = null;\n\n        // zoom stuff\n        this.maxZoom = 4;\n        this.minZoom = 1;\n        this.zoom = 1;\n\n        this.rotate = 0;\n\n        // mirror stuff, 1 for not mirrored, -1 for mirrored\n        this.mirrorHorizontal = 1;\n        this.mirrorVertical = 1;\n\n        this.boundEscapeListener = this.escapeListener.bind(this);\n\n        // url of currently loaded image\n        this.currentImageURL = null;\n    }\n\n    handleClick (event, settings, publicInstance, pageIndex)\n    {\n        document.body.style.overflow = 'hidden';\n        this._backdrop = document.createElement('div');\n        this._backdrop.classList.add('manipulation-fullscreen');\n\n        this._sidebar = document.createElement('div');\n        this._sidebar.classList.add('manipulation-sidebar');\n\n        this._mainArea = document.createElement('div');\n        this._mainArea.classList.add('manipulation-main-area');\n\n        // enable scroll by dragging\n        this._mainArea.classList.add('dragscroll');\n        this._mainArea.addEventListener('mousedown', () => { this._mainArea.classList.add('grabbing'); });\n        this._mainArea.addEventListener('mouseup', () => { this._mainArea.classList.remove('grabbing'); });\n\n        // add double click zoom handler\n        _gesture_events__WEBPACK_IMPORTED_MODULE_1__[\"default\"].onDoubleClick(this._mainArea, this.handleDblClick.bind(this));\n\n        this._tools = document.createElement('div');\n        this._tools.classList.add('manipulation-tools');\n\n        this._backdrop.appendChild(this._sidebar);\n        this._backdrop.appendChild(this._mainArea);\n        this._backdrop.appendChild(this._tools);\n\n        this._core.parentObject.appendChild(this._backdrop);\n        document.addEventListener('keyup', this.boundEscapeListener);\n\n        this._page = settings.manifest.pages[pageIndex];\n\n        this._canvas = document.createElement('canvas');\n        this._ctx = this._canvas.getContext('2d');\n        this._mainArea.appendChild(this._canvas);\n\n        this._initializeSidebar();\n        this._initializeTools();\n\n        window.resetDragscroll();\n        this._loadImageInMainArea(event, this._page.url);\n\n        // hide toolbar if fullscreen\n        if (settings.inFullscreen)\n        {\n            document.getElementById(settings.selector + 'tools').style.display = 'none';\n        }\n\n        // handle smaller viewport\n        if (window.innerWidth <= 1000)\n        {\n            this._mainArea.classList.remove('manipulation-main-area');\n            this._mainArea.classList.add('manipulation-main-area-mobile');\n            this._sidebar.classList.remove('manipulation-sidebar');\n            this._sidebar.classList.add('manipulation-sidebar-mobile');\n            this._tools.classList.remove('manipulation-tools');\n            this._tools.classList.add('manipulation-tools-mobile');\n\n            // add hamburger menus\n            let burger = document.createElement('div');\n            burger.classList.add('burger-menu');\n            let s1 = document.createElement('div');\n            let s2 = document.createElement('div');\n            let s3 = document.createElement('div');\n            s1.classList.add('stripe');\n            s2.classList.add('stripe');\n            s3.classList.add('stripe');\n\n            burger.appendChild(s1);\n            burger.appendChild(s2);\n            burger.appendChild(s3);\n\n            this.burgerClicked = false;\n\n            burger.onclick = () => {\n                if (this.burgerClicked)\n                {\n                    this._sidebar.style.display = 'none';\n                    this._tools.style.display = 'none';\n                    this._mainArea.style.display = 'block';\n                } \n                else\n                {\n                    this._sidebar.style.display = 'block';\n                    this._tools.style.display = 'block';\n                    this._mainArea.style.display = 'none';\n                }\n                this.burgerClicked = !this.burgerClicked;\n            };\n\n            this._backdrop.appendChild(burger);\n        }\n    }\n\n    handleDblClick (event)\n    {\n        let newZoom = event.ctrlKey ? this.zoom - 1 : this.zoom + 1;\n        if (newZoom < this.minZoom || newZoom > this.maxZoom)\n            return;\n\n        // update slider\n        let slider = document.getElementById('zoom-slider');\n        slider.value = newZoom;\n\n        this.handleZoom(event, newZoom, true);\n    }\n\n    /*\n    *  Returns an SVG object representing the icon for the project. Implemented in code\n    *  here so that the entire Diva object can be passed to the client with no external\n    *  dependencies.\n    **/\n    createIcon ()\n    {\n        const manipulationIcon = document.createElement('div');\n        manipulationIcon.classList.add('diva-manipulation-icon');\n\n        let root = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n        root.setAttribute(\"x\", \"0px\");\n        root.setAttribute(\"y\", \"0px\");\n        root.setAttribute(\"viewBox\", \"0 0 25 25\");\n        root.id = `${this._core.settings.selector}manipulation-icon`;\n\n        let g = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n        g.id = `${this._core.settings.selector}manipulation-icon-glyph`;\n        g.setAttribute(\"transform\", \"matrix(1, 0, 0, 1, -11.5, -11.5)\");\n        g.setAttribute(\"class\", \"diva-pagetool-icon\");\n\n        let path1 = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n        path1.setAttribute(\"d\", \"M27,21h-1v-9h-3v9h-1c-0.55,0-1,0.45-1,1v3c0,0.55,0.45,1,1,1h1h3h1c0.55,0,1-0.45,1-1v-3C28,21.45,27.55,21,27,21z M27,24h-5v-0.5h5V24z\");\n\n        let path2 = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n        path2.setAttribute(\"d\", \"M35,16h-1v-4h-3v4h-1c-0.55,0-1,0.45-1,1v3c0,0.55,0.45,1,1,1h1h3h1c0.55,0,1-0.45,1-1v-3C36,16.45,35.55,16,35,16z M35,19h-5v-0.5h5V19z\");\n\n        let path3 = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n        path3.setAttribute(\"d\", \"M19,26h-1V12h-3v14h-1c-0.55,0-1,0.45-1,1v3c0,0.55,0.45,1,1,1h1h3h1c0.55,0,1-0.45,1-1v-3C20,26.45,19.55,26,19,26zM19,29h-5v-0.5h5V29z\");\n\n        let rect1 = document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n        rect1.setAttribute('x', '23');\n        rect1.setAttribute('y', '27');\n        rect1.setAttribute('width', '3');\n        rect1.setAttribute('height', '9');\n\n        let rect2 = document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n        rect2.setAttribute('x', '31');\n        rect2.setAttribute('y', '22');\n        rect2.setAttribute('width', '3');\n        rect2.setAttribute('height', '14');\n\n        let rect3 = document.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n        rect3.setAttribute('x', '15');\n        rect3.setAttribute('y', '32');\n        rect3.setAttribute('width', '3');\n        rect3.setAttribute('height', '4');\n\n        g.appendChild(path1);\n        g.appendChild(path2);\n        g.appendChild(rect1);\n        g.appendChild(path3);\n        g.appendChild(rect2);\n        g.appendChild(rect3);\n        root.appendChild(g);\n\n        manipulationIcon.appendChild(root);\n\n        return manipulationIcon;\n    }\n\n    escapeListener (event)\n    {\n        if (event.keyCode === 27)\n        {\n            document.removeEventListener('keyup', this.boundEscapeListener);\n            document.body.style.overflow = 'auto';\n            this._core.parentObject.removeChild(this._backdrop);\n\n            // show toolbar \n            document.getElementById(`${this._core.settings.selector}tools`).style.display = 'block';\n        }\n    }\n\n    _initializeSidebar ()\n    {\n        // 150px wide images for the sidebar.\n        let thumbnailSize = \"150\";\n        let mainPageSidebarImageURL = `${this._page.url}full/${thumbnailSize},/0/default.jpg`;\n\n        let otherImageURLs = this._page.otherImages.map((img) =>\n        {\n            return `${img.url}full/${thumbnailSize},/0/default.jpg`;\n        });\n\n        let primaryImgDiv = document.createElement('div');\n        primaryImgDiv.classList.add('manipulation-sidebar-primary-image');\n\n        let primaryImg = document.createElement('img');\n        primaryImg.setAttribute('src', mainPageSidebarImageURL);\n\n        let primaryImgLabel = document.createElement('div');\n        primaryImgLabel.textContent = this._page.il;\n\n        primaryImgDiv.appendChild(primaryImg);\n        primaryImgDiv.appendChild(primaryImgLabel);\n\n        this._sidebar.appendChild(primaryImgDiv);\n\n        primaryImgDiv.addEventListener('click', () =>\n        {\n            this._loadImageInMainArea.call(this, event, this._page.url);\n        });\n\n        otherImageURLs.map((url, idx) =>\n        {\n            let othDiv = document.createElement('div');\n            othDiv.classList.add('manipulation-sidebar-secondary-image');\n\n            let othImg = document.createElement('img');\n            othImg.setAttribute('src', url);\n\n            let othImgLabel = document.createElement('div');\n            othImgLabel.textContent = this._page.otherImages[idx].il;\n\n            othDiv.appendChild(othImg);\n            othDiv.appendChild(othImgLabel);\n\n            this._sidebar.appendChild(othDiv);\n\n            othDiv.addEventListener('click', () => this._loadImageInMainArea.call(this, event, this._page.otherImages[idx].url));\n        });\n    }\n\n    _initializeTools ()\n    {\n        // Close button\n        let closeButton = document.createElement('button');\n\n        closeButton.innerHTML = '&#10006';\n        closeButton.classList.add('close-button');\n        closeButton.setAttribute('style', 'display: absolute; top: 1em; right: 1em;');\n\n        closeButton.onclick = () =>\n        {\n            document.body.style.overflow = 'auto';\n            this._core.parentObject.removeChild(this._backdrop);\n            document.getElementById(this._core.settings.selector + 'tools').style.display = 'block';\n        };\n\n        // Header title\n        let header = document.createElement('h1');\n\n        header.setAttribute('style', 'margin-bottom: 0.3em;');\n        header.classList.add('manipulation-tools-text');\n        header.innerText = 'Tools';\n\n        // Zoom tool\n        let zoomDiv = document.createElement('div');\n        let zoomAdjust = document.createElement('input');\n        let zoomText = document.createTextNode('Zoom');\n\n        zoomDiv.classList.add('manipulation-tools-text');\n        zoomAdjust.setAttribute('type', 'range');\n        zoomAdjust.setAttribute('max', this.maxZoom);\n        zoomAdjust.setAttribute('min', this.minZoom);\n        zoomAdjust.setAttribute('value', this.zoom);\n        zoomAdjust.id = 'zoom-slider';\n        zoomDiv.addEventListener('change', debounce((e) => this.handleZoom(e, e.target.value, true), 250));\n        zoomDiv.appendChild(zoomAdjust);\n        zoomDiv.appendChild(zoomText);\n\n        // Rotation tool\n        let rotateDiv = document.createElement('div');\n        let rotateAdjust = document.createElement('input');\n        let rotateText = document.createTextNode('Rotation');\n\n        rotateDiv.classList.add('manipulation-tools-text');\n        rotateAdjust.setAttribute('type', 'range');\n        rotateAdjust.setAttribute('max', 359);\n        rotateAdjust.setAttribute('min', 0);\n        rotateAdjust.setAttribute('value', 0);\n\n        rotateDiv.addEventListener('input', (e) => { this.handleTransform(e, null, e.target.value); });\n        rotateDiv.appendChild(rotateAdjust);\n        rotateDiv.appendChild(rotateText);\n\n        // Mirror tool\n        let mirrorDiv = document.createElement('div');\n        let verticalMirrorButton = document.createElement('button');\n        verticalMirrorButton.id = 'vertical-mirror-button';\n        let horizontalMirrorButton = document.createElement('button');\n        horizontalMirrorButton.id = 'horizontal-mirror-button';\n\n        verticalMirrorButton.textContent = \"Mirror Vertically\";\n        horizontalMirrorButton.textContent = \"Mirror Horizontally\";\n        verticalMirrorButton.addEventListener('click', (e) => this.handleTransform(e, 'vertical', this.rotate));\n        horizontalMirrorButton.addEventListener('click', (e) => this.handleTransform(e, 'horizontal', this.rotate));\n        mirrorDiv.appendChild(verticalMirrorButton);\n        mirrorDiv.appendChild(horizontalMirrorButton);\n\n        // Filters title\n        let filtersTitle = document.createElement('div');\n        filtersTitle.setAttribute('style', 'margin: 1em 0;');\n\n        let titleText = document.createElement('h3');\n        titleText.setAttribute('style', 'margin: 0;');\n        titleText.classList.add('manipulation-tools-text');\n        titleText.innerText = 'Filters';\n\n        // Selection options (color filters or threshold)\n        let select = document.createElement('select');\n        select.id = 'filter-select';\n        select.style.backgroundColor = 'white';\n\n        let colorFilters = document.createElement('option');\n        colorFilters.value = 'colours';\n        colorFilters.innerText = 'Color Filters';\n\n        let otherFilters = document.createElement('option');\n        otherFilters.value = 'threshold';\n        otherFilters.innerText = 'Threshold';\n        \n        select.addEventListener('change', switchVisibleFilters);\n        select.appendChild(colorFilters);\n        select.appendChild(otherFilters);\n        filtersTitle.appendChild(titleText);\n        filtersTitle.appendChild(select);\n\n        // Grayscale filter\n        let bwDiv = document.createElement('div');\n        bwDiv.classList.add('color-filters');\n        let blackWhiteButton = document.createElement('button');\n        blackWhiteButton.textContent = \"Grayscale\";\n        blackWhiteButton.addEventListener('click', (e) => this._applyTransformationToImageData(e, _filters__WEBPACK_IMPORTED_MODULE_0__[\"grayscale\"]));\n        bwDiv.appendChild(blackWhiteButton);\n\n        // Saturation filter\n        let saturationDiv = document.createElement('div');\n        saturationDiv.classList.add('color-filters');\n        saturationDiv.classList.add('manipulation-tools-text');\n        let saturationAdjust = document.createElement('input');\n        let saturationText = document.createTextNode('Saturation');\n        saturationAdjust.setAttribute('type', 'range');\n        saturationAdjust.setAttribute('max', 100);\n        saturationAdjust.setAttribute('min', -100);\n        saturationAdjust.setAttribute('value', 0);\n\n        saturationAdjust.addEventListener('change', debounce((e) => this._applyTransformationToImageData(e, _filters__WEBPACK_IMPORTED_MODULE_0__[\"saturation\"], e.target.value), 250));\n        saturationDiv.appendChild(saturationAdjust);\n        saturationDiv.appendChild(saturationText);\n\n        // Vibrance filter\n        let vibDiv = document.createElement('div');\n        vibDiv.classList.add('color-filters');\n        vibDiv.classList.add('manipulation-tools-text');\n        let vibranceAdjust = document.createElement('input');\n        let vibranceText = document.createTextNode('Vibrance');\n        vibranceAdjust.setAttribute('type', 'range');\n        vibranceAdjust.setAttribute('max', 100);\n        vibranceAdjust.setAttribute('min', -100);\n        vibranceAdjust.setAttribute('value', 0);\n\n        vibranceAdjust.addEventListener('change', debounce((e) => this._applyTransformationToImageData(e, _filters__WEBPACK_IMPORTED_MODULE_0__[\"vibrance\"], e.target.value), 250));\n        vibDiv.appendChild(vibranceAdjust);\n        vibDiv.appendChild(vibranceText);\n\n        // Brightness filter\n        let brightDiv = document.createElement('div');\n        brightDiv.classList.add('color-filters');\n        brightDiv.classList.add('manipulation-tools-text');\n        let brightnessAdjust = document.createElement('input');\n        let brightnessText = document.createTextNode('Brightness');\n        brightnessAdjust.setAttribute('type', 'range');\n        brightnessAdjust.setAttribute('max', 100);\n        brightnessAdjust.setAttribute('min', -100);\n        brightnessAdjust.setAttribute('value', 0);\n\n        brightnessAdjust.addEventListener('change', debounce((e) => this._applyTransformationToImageData(e, _filters__WEBPACK_IMPORTED_MODULE_0__[\"brightness\"], e.target.value), 250));\n        brightDiv.appendChild(brightnessAdjust);\n        brightDiv.appendChild(brightnessText);\n\n        // Contrast filter\n        let contrastDiv = document.createElement('div');\n        contrastDiv.classList.add('color-filters');\n        contrastDiv.classList.add('manipulation-tools-text');\n        let contrastAdjust = document.createElement('input');\n        let contrastText = document.createTextNode('Contrast');\n        contrastAdjust.setAttribute('type', 'range');\n        contrastAdjust.setAttribute('max', 100);\n        contrastAdjust.setAttribute('min', -100);\n        contrastAdjust.setAttribute('value', 0);\n\n        contrastAdjust.addEventListener('change', debounce((e) => this._applyTransformationToImageData(e, _filters__WEBPACK_IMPORTED_MODULE_0__[\"contrast\"], e.target.value), 250));\n        contrastDiv.appendChild(contrastAdjust);\n        contrastDiv.appendChild(contrastText);\n\n        // Invert colours filter\n        let invDiv = document.createElement('div');\n        invDiv.classList.add('color-filters');\n        let invertButton = document.createElement('button');\n        invertButton.textContent = \"Invert Colours\";\n        invertButton.addEventListener('click', (e) => this._applyTransformationToImageData(e, _filters__WEBPACK_IMPORTED_MODULE_0__[\"invert\"]));\n        invDiv.appendChild(invertButton);\n\n        // Sharpness filter\n        let sharpDiv = document.createElement('div');\n        sharpDiv.classList.add('color-filters');\n        sharpDiv.classList.add('manipulation-tools-text');\n        let sharpenAdjust = document.createElement('input');\n        let sharpenText = document.createTextNode('Sharpness');\n        sharpenAdjust.setAttribute('type', 'range');\n        sharpenAdjust.setAttribute('max', 100);\n        sharpenAdjust.setAttribute('min', 0);\n        sharpenAdjust.setAttribute('value', 0);\n\n        sharpenAdjust.addEventListener('change', debounce((e) => this._applyTransformationToImageData(e, _filters__WEBPACK_IMPORTED_MODULE_0__[\"sharpen\"], e.target.value), 250));\n        sharpDiv.appendChild(sharpenAdjust);\n        sharpDiv.appendChild(sharpenText);\n\n        // Hue filter\n        let hueDiv = document.createElement('div');\n        hueDiv.classList.add('color-filters');\n        hueDiv.classList.add('manipulation-tools-text');\n        let hueAdjust = document.createElement('input');\n        let hueText = document.createTextNode('Hue');\n        hueAdjust.setAttribute('type', 'range');\n        hueAdjust.setAttribute('max', 100);\n        hueAdjust.setAttribute('min', 0);\n        hueAdjust.setAttribute('value', 0);\n\n        hueAdjust.addEventListener('change', debounce((e) => this._applyTransformationToImageData(e, _filters__WEBPACK_IMPORTED_MODULE_0__[\"hue\"], e.target.value), 250));\n        hueDiv.appendChild(hueAdjust);\n        hueDiv.appendChild(hueText);\n\n        // Gamma filter\n        let gammaDiv = document.createElement('div');\n        gammaDiv.classList.add('color-filters');\n        gammaDiv.classList.add('manipulation-tools-text');\n        let gammaAdjust = document.createElement('input');\n        let gammaText = document.createTextNode('Gamma');\n        gammaAdjust.setAttribute('type', 'range');\n        gammaAdjust.setAttribute('max', 300);\n        gammaAdjust.setAttribute('min', -100);\n        gammaAdjust.setAttribute('value', 0);\n\n        gammaAdjust.addEventListener('change', debounce((e) => this._applyTransformationToImageData(e, _filters__WEBPACK_IMPORTED_MODULE_0__[\"gamma\"], e.target.value), 250));\n        gammaDiv.appendChild(gammaAdjust);\n        gammaDiv.appendChild(gammaText);\n\n        // Colour channel RGB slides\n        let ccRedDiv = document.createElement('div');\n        ccRedDiv.classList.add('color-filters');\n        ccRedDiv.classList.add('manipulation-tools-text');\n        let ccRedAdjust = document.createElement('input');\n        let ccRedText = document.createTextNode('CC Red');\n        ccRedAdjust.setAttribute('type', 'range');\n        ccRedAdjust.setAttribute('max', 100);\n        ccRedAdjust.setAttribute('min', -100);\n        ccRedAdjust.setAttribute('value', 0);\n\n        let ccGreenDiv = document.createElement('div');\n        ccGreenDiv.classList.add('color-filters');\n        ccGreenDiv.classList.add('manipulation-tools-text');\n        let ccGreenAdjust = document.createElement('input');\n        let ccGreenText = document.createTextNode('CC Green');\n        ccGreenAdjust.setAttribute('type', 'range');\n        ccGreenAdjust.setAttribute('max', 100);\n        ccGreenAdjust.setAttribute('min', -100);\n        ccGreenAdjust.setAttribute('value', 0);\n\n        let ccBlueDiv = document.createElement('div');\n        ccBlueDiv.classList.add('color-filters');\n        ccBlueDiv.classList.add('manipulation-tools-text');\n        let ccBlueAdjust = document.createElement('input');\n        let ccBlueText = document.createTextNode('CC Blue');\n        ccBlueAdjust.setAttribute('type', 'range');\n        ccBlueAdjust.setAttribute('max', 100);\n        ccBlueAdjust.setAttribute('min', -100);\n        ccBlueAdjust.setAttribute('value', 0);\n\n        ccRedAdjust.addEventListener('change', debounce((e) => this._applyTransformationToImageData(e, _filters__WEBPACK_IMPORTED_MODULE_0__[\"ccRed\"], e.target.value), 250));\n        ccGreenAdjust.addEventListener('change', debounce((e) => this._applyTransformationToImageData(e, _filters__WEBPACK_IMPORTED_MODULE_0__[\"ccGreen\"], e.target.value), 250));\n        ccBlueAdjust.addEventListener('change', debounce((e) => this._applyTransformationToImageData(e, _filters__WEBPACK_IMPORTED_MODULE_0__[\"ccBlue\"], e.target.value), 250));\n        \n        ccRedDiv.appendChild(ccRedAdjust);\n        ccRedDiv.appendChild(ccRedText);\n        ccGreenDiv.appendChild(ccGreenAdjust);\n        ccGreenDiv.appendChild(ccGreenText);\n        ccBlueDiv.appendChild(ccBlueAdjust);\n        ccBlueDiv.appendChild(ccBlueText);\n\n        // Threshold filter\n        let threshDiv = document.createElement('div');\n        threshDiv.style.display = 'none';\n        let thresholdAdjust = document.createElement('input');\n        let thresholdText = document.createTextNode('Threshold');\n        threshDiv.classList.add('manipulation-tools-text');\n        thresholdAdjust.setAttribute('type', 'range');\n        thresholdAdjust.setAttribute('max', 255);\n        thresholdAdjust.setAttribute('min', 64);\n        thresholdAdjust.setAttribute('value', 0);\n\n        thresholdAdjust.addEventListener('change', debounce((e) => this._applyTransformationToImageData(e, _filters__WEBPACK_IMPORTED_MODULE_0__[\"threshold\"], e.target.value), 250));\n        threshDiv.appendChild(thresholdAdjust);\n        threshDiv.appendChild(thresholdText);\n\n        // Reset button\n        let resetButton = document.createElement('button');\n        resetButton.setAttribute('style', 'margin-top: 1em;');\n        let buttonText = document.createTextNode('Reset');\n        resetButton.appendChild(buttonText);\n        resetButton.onclick = (e) => { this._loadImageInMainArea(e, this.currentImageURL); };\n\n        // Log to keep track of the order of filter application\n        let filterLog = document.createElement('div');\n        filterLog.classList.add('manipulation-tools-text');\n        filterLog.innerHTML = \"<h3> Filter Application Order <h3>\";\n        filterLog.id = 'filter-log';\n\n        this._tools.appendChild(closeButton);\n        this._tools.appendChild(header);\n        this._tools.appendChild(zoomDiv);\n        this._tools.appendChild(rotateDiv);\n        this._tools.appendChild(mirrorDiv);\n        this._tools.appendChild(filtersTitle);\n        this._tools.appendChild(bwDiv);\n        this._tools.appendChild(invDiv);\n        this._tools.appendChild(saturationDiv);\n        this._tools.appendChild(vibDiv);\n        this._tools.appendChild(brightDiv);\n        this._tools.appendChild(contrastDiv);\n        this._tools.appendChild(sharpDiv);\n        this._tools.appendChild(hueDiv);\n        this._tools.appendChild(gammaDiv);\n        this._tools.appendChild(ccRedDiv);\n        this._tools.appendChild(ccGreenDiv);\n        this._tools.appendChild(ccBlueDiv);\n        this._tools.appendChild(threshDiv);\n        this._tools.appendChild(resetButton);\n        this._tools.appendChild(filterLog);\n\n        this._tools.setAttribute('style', 'padding: 0 1em;');\n\n        function switchVisibleFilters ()\n        {\n            let filters = document.getElementsByClassName('color-filters');\n\n            if (this.value === 'threshold')\n            {\n                for (let i = 0, len = filters.length; i < len; i++)\n                {\n                    filters[i].style.display = 'none';\n                }\n\n                threshDiv.style.display = 'block';\n            }\n            else\n            {\n                for (let i = 0, len = filters.length; i < len; i++)\n                {\n                    filters[i].style.display = 'block';\n                }\n\n                threshDiv.style.display = 'none';\n            }\n        }\n    }\n\n    _resetSliders ()\n    {\n        // check if element is a slider, if so then reset \n        for (let i = 0, len = this._tools.children.length; i < len; i++)\n        {\n            let tool = this._tools.children[i].children[0];\n            if (tool && tool.type === 'range')\n                tool.value = 0;\n        }\n\n        document.getElementById('filter-log').innerHTML = \"<h3> Filter Application Order <h3>\";\n\n        // reset counters\n        this.zoom = 1;\n        this.rotate = 0;\n\n        // reset mirror\n        this.mirrorHorizontal = 1;\n        this.mirrorVertical = 1;\n        this.handleTransform(null, null, this.rotate);\n\n        Object(_filters__WEBPACK_IMPORTED_MODULE_0__[\"resetFilters\"])();\n    }\n\n    _loadImageInMainArea (event, imageURL)\n    {\n        this.currentImageURL = imageURL; // for resetting\n\n        let url = `${imageURL}full/full/0/default.jpg`;\n\n        this._mainImage = new Image();\n        this._mainImage.crossOrigin = \"anonymous\";\n\n        this._mainImage.addEventListener('load', () =>\n        {\n            // Determine the size of the (square) canvas based on the hypoteneuse\n            this._canvas.size = Math.sqrt(this._mainImage.width * this._mainImage.width + this._mainImage.height * this._mainImage.height);\n            this._canvas.width = this._canvas.size;\n            this._canvas.height = this._canvas.size;\n            this._canvas.cornerX = (this._canvas.size - this._mainImage.width) / 2;\n            this._canvas.cornerY = (this._canvas.size - this._mainImage.height) / 2;\n\n            this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n            this._ctx.drawImage(this._mainImage, this._canvas.cornerX, this._canvas.cornerY, this._mainImage.width, this._mainImage.height);\n            this._originalData = this._ctx.getImageData(this._canvas.cornerX, this._canvas.cornerY, this._mainImage.width, this._mainImage.height);\n            this._alteredData = this._originalData;\n\n            // to preserve pre-zoom dimensions\n            this.dims = {\n                w: this._canvas.width,\n                h: this._canvas.height\n            };\n\n            // clean up the image data since it's been painted to the canvas\n            this._mainImage = null;\n\n            // center the viewport\n            this.centerView();\n        });\n\n        this._mainImage.src = url;\n\n        this._resetSliders();\n    }\n\n    _applyTransformationToImageData (event, func, value)\n    {\n        let cw = this._canvas.width;\n        let ch = this._canvas.height;\n        let adjustment;\n\n        if (value)\n        {\n            adjustment = parseInt(value, 10);\n        }\n\n        let newData = func(this._originalData, adjustment);\n        this._alteredData = newData;\n\n        this._ctx.clearRect(0, 0, cw, ch);\n        this._ctx.putImageData(newData, this._canvas.cornerX, this._canvas.cornerY);\n\n        // necessary to reset the current zoom level (since ImageData gets altered at zoom 1)\n        this.handleZoom(event, this.zoom, false);\n    }\n\n    handleZoom (event, value, recenter)\n    {\n        let scale = value * 0.5 + 0.5;\n\n        let w = this.dims.w;\n        let h = this.dims.h;\n\n        // temp canvas for drawing at original zoom level \n        let tempCanvas = document.createElement('canvas');\n        let tempCtx = tempCanvas.getContext('2d');\n        tempCanvas.width = w;\n        tempCanvas.height = h;\n        tempCtx.putImageData(this._alteredData, this._canvas.cornerX, this._canvas.cornerY);\n\n        this._canvas.width = w * scale;\n        this._canvas.height = h * scale;\n        this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\n        this._ctx.scale(scale, scale);\n        this._ctx.drawImage(tempCanvas, 0, 0);\n\n        // determine if zooming in or not\n        let zoomingIn = value > this.zoom ? true : false;\n\n        this.zoom = parseInt(value, 10);\n\n        if (recenter)\n        {\n            let rect = event.target.getBoundingClientRect();\n            let x = event.clientX - rect.left;\n            let y = event.clientY - rect.top;\n\n            if (!zoomingIn)\n            {\n                // x & y are in terms of pre-zoom-out dimensions, so scale down accordingly\n                let scaleOut = (this.zoom * 0.5 + 0.5) / ((this.zoom + 1) * 0.5 + 0.5);\n                x *= scaleOut;\n                y *= scaleOut;\n            }\n\n            this.centerView(x, y, zoomingIn);\n        }\n    }\n\n    centerView (x, y, zoomingIn)\n    {\n        let view = document.getElementsByClassName('manipulation-main-area')[0];\n        if (!view)\n            view = document.getElementsByClassName('manipulation-main-area-mobile')[0];\n\n        if (zoomingIn)\n        {\n            // x & y are in terms of pre-zoom-in dimensions, so scale up accordingly\n            let scaleIn = (this.zoom * 0.5 + 0.5) / ((this.zoom - 1) * 0.5 + 0.5);\n            x *= scaleIn;\n            y *= scaleIn;\n        }\n\n        // distance from center\n        let center = this._canvas.height / 2;\n        let distY = y - center;\n        let distX = x - center;\n\n        let h = this._canvas.height;\n        let w = this._canvas.width;\n\n        let topCentered = (h - view.clientHeight) / 2;\n        let leftCentered = (w - view.clientWidth) / 2;\n\n        let top = y ? topCentered + distY : topCentered;\n        let left = x ? leftCentered + distX : leftCentered;\n\n        view.scrollTop = top;\n        view.scrollLeft = left;\n    }\n\n    handleTransform (event, type, value)\n    {\n        let canvas = document.getElementsByClassName('manipulation-main-area')[0].children[0];\n\n        if (type === 'vertical')\n            this.mirrorVertical *= -1;\n        else if (type === 'horizontal')\n            this.mirrorHorizontal *= -1;\n\n        canvas.style.transform = \"scale(\"+this.mirrorHorizontal+\",\"+this.mirrorVertical+\") rotate(\"+value+\"deg)\";\n\n        this.rotate = value;\n    }\n}\n\nManipulationPlugin.prototype.pluginName = \"manipulation\";\nManipulationPlugin.prototype.isPageTool = true;\n\n/**\n * Make this plugin available in the global context\n * as part of the 'Diva' namespace.\n **/\n(function (global)\n{\n    global.Diva.ManipulationPlugin = ManipulationPlugin;\n})(window);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./source/js/plugins/manipulation.js\n");

/***/ })

/******/ });